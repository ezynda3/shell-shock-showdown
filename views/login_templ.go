// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/pocketbase/pocketbase"
	"github.com/pocketbase/pocketbase/core"
)

func Login(configs []core.OAuth2ProviderConfig) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if app, ok := ctx.Value("app").(*pocketbase.PocketBase); ok {
			templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
				templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
				templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
				if !templ_7745c5c3_IsBuffer {
					defer func() {
						templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
						if templ_7745c5c3_Err == nil {
							templ_7745c5c3_Err = templ_7745c5c3_BufErr
						}
					}()
				}
				ctx = templ.InitializeContext(ctx)
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"relative flex min-h-screen items-center justify-center\"><!-- Full-screen background image --><div class=\"absolute inset-0 z-0\"><img src=\"/static/img/splash.webp\" alt=\"Background\" class=\"h-full w-full object-cover\"><div class=\"absolute inset-0 bg-black/50 backdrop-blur-sm\"></div></div><!-- Semi-transparent card with login buttons --><div class=\"relative z-10 w-full max-w-md px-4\"><div class=\"rounded-xl border border-gray-200 bg-gray-800 p-6 shadow-xl\"><div id=\"oauth-providers\" class=\"grid grid-cols-1 gap-3\"><!-- Provider buttons will be populated here --></div></div></div></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.JSONScript("appUrl", app.Settings().Meta.AppURL).Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, " <script type=\"module\">\n\t\t\timport PocketBase from 'https://cdnjs.cloudflare.com/ajax/libs/pocketbase/0.25.0/pocketbase.es.mjs';\n\t\t\t\n\t\t\t// Initialize PocketBase with the app URL from server-side\n\t\t\tconst appUrl = document.getElementById('appUrl').textContent.trim().replace(/['\"]/g, '');\n\t\t\tconst pb = new PocketBase(appUrl);\n\t\t\t\n\t\t\t// Function to handle OAuth2 authentication\n\t\t\tasync function handleOAuth2Auth(provider) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will open a popup with the OAuth2 provider's login page\n\t\t\t\t\t// When authentication is complete, the popup will close automatically\n\t\t\t\t\tconst authData = await pb.collection('users').authWithOAuth2({\n\t\t\t\t\t\tprovider: provider,\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tconsole.log('User authenticated:', authData);\n\t\t\t\t\t\n\t\t\t\t\t// Redirect to home page after successful authentication\n\t\t\t\t\twindow.location.href = '/';\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Authentication failed:', error);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Get available OAuth2 providers\n\t\t\tasync function loadProviders() {\n\t\t\t\ttry {\n\t\t\t\t\tconst authMethods = await pb.collection('users').listAuthMethods();\n\t\t\t\t\tconst providers = authMethods.oauth2?.providers || [];\n\t\t\t\t\tconst container = document.getElementById('oauth-providers');\n\t\t\t\t\t\n\t\t\t\t\t// Clear existing content\n\t\t\t\t\tcontainer.innerHTML = '';\n\t\t\t\t\t\n\t\t\t\t\t// Create a button for each provider\n\t\t\t\t\tproviders.forEach(provider => {\n\t\t\t\t\t\tconst button = document.createElement('button');\n\t\t\t\t\t\tbutton.className = 'uk-btn uk-btn-default w-full capitalize flex items-center justify-center py-3 bg-white/90 hover:bg-white text-black';\n\t\t\t\t\t\tbutton.onclick = () => handleOAuth2Auth(provider.name);\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst icon = document.createElement('uk-icon');\n\t\t\t\t\t\ticon.className = 'mr-2';\n\t\t\t\t\t\ticon.setAttribute('icon', provider.name.toLowerCase());\n\t\t\t\t\t\t\n\t\t\t\t\t\tbutton.appendChild(icon);\n\t\t\t\t\t\tbutton.appendChild(document.createTextNode(`Continue with ${provider.name}`));\n\t\t\t\t\t\t\n\t\t\t\t\t\tcontainer.appendChild(button);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tif (providers.length === 0) {\n\t\t\t\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t\t\t<div class=\"text-center p-6 rounded-lg border border-white/20 bg-black/20\">\n\t\t\t\t\t\t\t\t<div class=\"text-4xl mb-4\">üòï</div>\n\t\t\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-white\">No OAuth2 providers available</h3>\n\t\t\t\t\t\t\t\t<p class=\"text-white/70 text-sm mt-2\">Please configure OAuth2 providers in your PocketBase admin panel.</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Failed to load auth methods:', error);\n\t\t\t\t\tconst container = document.getElementById('oauth-providers');\n\t\t\t\t\tcontainer.innerHTML = `\n\t\t\t\t\t\t<div class=\"text-center p-6 rounded-lg border border-red-500/50 bg-black/20\">\n\t\t\t\t\t\t\t<div class=\"text-4xl mb-4\">‚ùå</div>\n\t\t\t\t\t\t\t<h3 class=\"text-lg font-medium text-red-500\">Error loading providers</h3>\n\t\t\t\t\t\t\t<p class=\"text-white/70 text-sm mt-2\">${error.message}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Load providers when the page loads\n\t\t\tdocument.addEventListener('DOMContentLoaded', loadProviders);\n\t\t</script>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				return nil
			})
			templ_7745c5c3_Err = Layout(false, app.Settings().Meta.AppURL).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
