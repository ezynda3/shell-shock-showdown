package views

import (
	"github.com/pocketbase/pocketbase/core"
	"github.com/pocketbase/pocketbase"
)

templ Login(configs []core.OAuth2ProviderConfig) {
	if app, ok := ctx.Value("app").(*pocketbase.PocketBase); ok {
		@Layout(false, app.Settings().Meta.AppURL) {
		<div class="relative flex min-h-screen items-center justify-center">
			<!-- Full-screen background image -->
			<div class="absolute inset-0 z-0">
				<img 
					src="/static/img/splash.webp" 
					alt="Background" 
					class="h-full w-full object-cover"
				/>
				<div class="absolute inset-0 bg-black/50 backdrop-blur-sm"></div>
			</div>
			
			<!-- Semi-transparent card with login buttons -->
			<div class="relative z-10 w-full max-w-md px-4">
				<div class="rounded-xl border border-gray-200 bg-gray-800 p-6 shadow-xl">
					<div id="oauth-providers" class="grid grid-cols-1 gap-3">
						<!-- Provider buttons will be populated here -->
					</div>
				</div>
			</div>
		</div>

		@templ.JSONScript("appUrl", app.Settings().Meta.AppURL)
		<script type="module">
			import PocketBase from 'https://cdnjs.cloudflare.com/ajax/libs/pocketbase/0.25.0/pocketbase.es.mjs';
			
			// Initialize PocketBase with the app URL from server-side
			const appUrl = document.getElementById('appUrl').textContent.trim().replace(/['"]/g, '');
			const pb = new PocketBase(appUrl);
			
			// Function to handle OAuth2 authentication
			async function handleOAuth2Auth(provider) {
				try {
					// This will open a popup with the OAuth2 provider's login page
					// When authentication is complete, the popup will close automatically
					const authData = await pb.collection('users').authWithOAuth2({
						provider: provider,
					});
					
					console.log('User authenticated:', authData);
					
					// Redirect to home page after successful authentication
					window.location.href = '/';
				} catch (error) {
					console.error('Authentication failed:', error);
				}
			}
			
			// Get available OAuth2 providers
			async function loadProviders() {
				try {
					const authMethods = await pb.collection('users').listAuthMethods();
					const providers = authMethods.oauth2?.providers || [];
					const container = document.getElementById('oauth-providers');
					
					// Clear existing content
					container.innerHTML = '';
					
					// Create a button for each provider
					providers.forEach(provider => {
						const button = document.createElement('button');
						button.className = 'uk-btn uk-btn-default w-full capitalize flex items-center justify-center py-3 bg-white/90 hover:bg-white text-black';
						button.onclick = () => handleOAuth2Auth(provider.name);
						
						const icon = document.createElement('uk-icon');
						icon.className = 'mr-2';
						icon.setAttribute('icon', provider.name.toLowerCase());
						
						button.appendChild(icon);
						button.appendChild(document.createTextNode(`Continue with ${provider.name}`));
						
						container.appendChild(button);
					});
					
					if (providers.length === 0) {
						container.innerHTML = `
							<div class="text-center p-6 rounded-lg border border-white/20 bg-black/20">
								<div class="text-4xl mb-4">üòï</div>
								<h3 class="text-lg font-medium text-white">No OAuth2 providers available</h3>
								<p class="text-white/70 text-sm mt-2">Please configure OAuth2 providers in your PocketBase admin panel.</p>
							</div>
						`;
					}
				} catch (error) {
					console.error('Failed to load auth methods:', error);
					const container = document.getElementById('oauth-providers');
					container.innerHTML = `
						<div class="text-center p-6 rounded-lg border border-red-500/50 bg-black/20">
							<div class="text-4xl mb-4">‚ùå</div>
							<h3 class="text-lg font-medium text-red-500">Error loading providers</h3>
							<p class="text-white/70 text-sm mt-2">${error.message}</p>
						</div>
					`;
				}
			}
			
			// Load providers when the page loads
			document.addEventListener('DOMContentLoaded', loadProviders);
		</script>
		}
	}
}