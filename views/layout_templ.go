// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.819
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/pocketbase/pocketbase/core"
	"time"
)

func GetTimeComponents() (string, string, string) {
	now := time.Now()
	hours := now.Format("15")   // 24-hour format
	minutes := now.Format("04") // zero-padded minutes
	seconds := now.Format("05") // zero-padded seconds
	return hours, minutes, seconds
}

func Layout(loggedIn bool) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width\"><title>Tank Game</title><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><style>\n      :root {\n        font-family: Inter, sans-serif;\n        font-feature-settings: \"liga\" 1, \"calt\" 1; /* fix for Chrome */\n      }\n      @supports (font-variation-settings: normal) {\n        :root {\n          font-family: InterVariable, sans-serif;\n        }\n      }\n      html, body {\n        margin: 0;\n        padding: 0;\n        height: 100%;\n        overflow: hidden;\n      }\n    </style><link rel=\"stylesheet\" href=\"https://unpkg.com/franken-ui@internal/dist/css/core.min.css\"><link rel=\"stylesheet\" href=\"https://unpkg.com/franken-ui@internal/dist/css/utilities.min.css\"><script>\n    const htmlElement = document.documentElement;\n    \n    // Set violet theme by default\n    htmlElement.classList.add(\"dark\", \"uk-theme-violet\");\n    \n    // Initialize theme based on system preference\n    if (window.matchMedia(\"(prefers-color-scheme: light)\").matches) {\n        htmlElement.classList.remove(\"dark\");\n        document.getElementById(\"themeIcon\").setAttribute(\"icon\", \"sun\");\n    }\n    \n    function toggleTheme() {\n        const isDark = htmlElement.classList.toggle(\"dark\");\n        document.getElementById(\"themeIcon\").setAttribute(\"icon\", isDark ? \"moon\" : \"sun\");\n    }\n    </script><script type=\"module\" src=\"https://unpkg.com/franken-ui@internal/dist/js/core.iife.js\"></script><script type=\"module\" src=\"https://unpkg.com/franken-ui@internal/dist/js/icon.iife.js\"></script><script type=\"module\" src=\"https://cdn.jsdelivr.net/gh/starfederation/datastar@v1.0.0-beta.2/bundles/datastar.js\"></script></head><body class=\"bg-background text-foreground min-h-screen flex flex-col\"><!-- Header Navigation --><header class=\"border-b border-border\"><div class=\"uk-container uk-container-xl\"><nav class=\"flex items-center justify-between h-16\"><div class=\"flex items-center gap-x-6\"><a href=\"/\" class=\"font-bold text-lg\">Shell Shock Showdown</a><div class=\"flex gap-x-4\"><a href=\"/docs\" class=\"text-muted-foreground hover:text-foreground\">Instructions</a> <a href=\"/components\" class=\"text-muted-foreground hover:text-foreground\">Settings</a></div></div><div class=\"flex items-center gap-x-2\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if loggedIn {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<a href=\"/logout\" class=\"uk-btn uk-btn-default\">Sign out</a> ")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if user := ctx.Value("user"); user != nil {
				if auth, ok := user.(*core.Record); ok {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<button class=\"uk-btn uk-btn-default uk-btn-icon\"><img src=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var2 string
					templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs("http://localhost:7331/api/files/" + auth.BaseFilesPath() + "/" + auth.GetString("avatar"))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/layout.templ`, Line: 86, Col: 108}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" alt=\"User avatar\" class=\"h-5 w-5 rounded-full\"></button>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<a href=\"/login\" class=\"uk-btn uk-btn-default\">Sign in</a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"uk-inline\"><button class=\"uk-btn uk-btn-default uk-btn-icon\" aria-label=\"Toggle theme\" onclick=\"toggleTheme()\"><uk-icon id=\"themeIcon\" icon=\"moon\"></uk-icon></button></div></div></nav></div></header><!-- Main Content --><main class=\"flex-1 overflow-hidden\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</main><!-- Application JS --><script src=\"/static/js/app.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
